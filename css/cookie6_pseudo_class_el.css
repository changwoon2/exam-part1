/* 1. 가상클래스, 가상요소, 가상 선택자 
  Pseudo-class, Pseudo-element, Pseudo-selector
  이것들을 사용하면 HTML 문서내에 쓸데없는 태그 작성이나 수정 없이 CSS 작업단에서 디자인적인 요소를 추가, 또는 꾸밀 수가 있어서 매우 많이 사용하는 CSS기법중 하나. 즉, HTML문서에는 존재하지 않지만 필요에 위해 임의로 가상의 선택자를 지정하여 꾸미는것.

  2. 쓸데없는 태그를 사용하지 않는다는 것이 뭐가 좋지?
  가독성이 좋다. 가급적 HTML 문서에 쓸데없는 태그나 디자인적 꾸밈이 없다면 화면 리더기 등이 읽어 나갈때 이러한 부분을 스캐닝 하지 않으므로 좋고, 전체적인 문서의 가독성도 좋게 만든다.

  3. 사용방법 -->: 또는 ::-->호환성을 위해서 둘다 사용이 가능하나 구버전 브라우저에서는 안될수있음.

  4. 가상 클래스 -->실제 클래스를 만들어 사용하는것이 아닌 선택자 뒤에 가상클래스를 붙여 CSS디자인을 꾸밈.  

  5. 가상 요소 -->가상 클래스는 실제로 문서(HTML)에 작성되어 있는 요소에 클래스 추가 없이 CSS 디자인을 꾸밈. -->클래스가 없음에도 마치 클래스를 만들어 지정해놓은 것처럼 선택자로 선택하고 꾸밈 -->반면, 가상요소는 실제로 문서(HTML)에 없는 요소를 아예 있는 것처럼 만들어서 사용하게끔 함. -->어떠한 요소(Element)도 없는데 마치 있는 것처럼 가상으로 지정해서 CSS를 수정함. -->가상클래스와 구분을 위해서 ::2개사용 --> 선택자::가상요소 {property:value;} ::before{content:"";} ::after{content:url('이미지경로');} ::marker{...} ::selection{...} (마우스드래그 -->) 일명 형광펜기능) ::first-line{...} ::first-letter{...}
*/
a {
  color: red;
  text-decoration: none;
}

a:hover {
  color: blue;
  text-decoration: underline;
}

a:active {
  color: yellow;
}

a:visited {
  color: green;
}

a:focus {
  background-color: #000;
  color: blueviolet;
}

input:focus {
  background-color: red;
  color: #fff;
}

input:focus:nth-last-child(2) {
  background-color: green;
}

.test {
  border-bottom: 1px solid;
}

.test ul li:first-child {
  font-weight: bold;
  color: blue;
}

.test ul li:first-child::first-letter {
  font-weight: bold;
  color: red;
  font-size: 200%;
}

.test2::first-line {
  background-color: royalblue;
  color: #fff;
  font-weight: bold;
}
.test2::first-letter {
  background-color: red;
  font-weight: bold;
}

.test2::before {
  content: "😍";
}
.test2::after {
  content: "😎";
}

.btnClose::before {
  content: "❤";
}
